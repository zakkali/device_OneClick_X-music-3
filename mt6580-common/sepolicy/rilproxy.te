# ==============================================
# Policy File of /system/bin/rilproxy Executable File

# ==============================================
# Type Declaration
# ==============================================
type rilproxy_exec , exec_type, file_type;
type rilproxy ,domain, domain_deprecated;

# ==============================================
# MTK Policy Rule
# ==============================================
init_daemon_domain(rilproxy)
net_domain(rilproxy)

# Trigger module auto-load.
allow rilproxy kernel:system module_request;

# Capabilities assigned for rilproxy
allow rilproxy self:capability { setuid net_admin net_raw };
allow rilproxy self:capability dac_override;

# Control cgroups
allow rilproxy cgroup:dir create_dir_perms;

# Allow rx permission to shell executables
allow rilproxy shell_exec:file rx_file_perms;

# Property service
# allow set RIL related properties (radio./net./system./etc)
set_prop(rilproxy, radio_prop)
set_prop(rilproxy, net_radio_prop)
set_prop(rilproxy, system_radio_prop)
set_prop(rilproxy, persist_ril_prop)
auditallow rilproxy net_radio_prop:property_service set;
auditallow rilproxy system_radio_prop:property_service set;
set_prop(rilproxy, ril_active_md_prop)
# allow set muxreport control properties
set_prop(rilproxy, ril_cdma_report_prop)
set_prop(rilproxy, ril_mux_report_case_prop)
set_prop(rilproxy, ctl_muxreport-daemon_prop)

# Access to wake locks
wakelock_use(rilproxy)

# Allow access permission to efs files
allow rilproxy efs_file:dir create_dir_perms;
allow rilproxy efs_file:file create_file_perms;
allow rilproxy bluetooth_efs_file:file r_file_perms;
allow rilproxy bluetooth_efs_file:dir r_dir_perms;

# Allow access permission to dir/files
# (radio data/system data/proc/etc)
allow rilproxy radio_data_file:dir rw_dir_perms;
allow rilproxy radio_data_file:file create_file_perms;
allow rilproxy sdcard_type:dir r_dir_perms;
allow rilproxy system_data_file:dir r_dir_perms;
allow rilproxy system_data_file:file r_file_perms;
allow rilproxy system_file:file x_file_perms;
allow rilproxy proc:file rw_file_perms;
allow rilproxy proc_net:file w_file_perms;

# Allow rilproxy to create and use netlink sockets.
allow rilproxy self:netlink_socket create_socket_perms;
allow rilproxy self:netlink_kobject_uevent_socket create_socket_perms;
# Set and get routes directly via netlink.
allow rilproxy self:netlink_route_socket nlmsg_write;

# Allow rilproxy to create sockets.
allow rilproxy self:socket create_socket_perms;

# Allow read/write to devices/files
allow rilproxy alarm_device:chr_file rw_file_perms;
allow rilproxy radio_device:chr_file rw_file_perms;
allow rilproxy radio_device:blk_file r_file_perms;
allow rilproxy mtd_device:dir search;
# Allow read/write to uart driver (for GPS)
allow rilproxy gps_device:chr_file rw_file_perms;
# Allow read/write to tty devices
allow rilproxy tty_device:chr_file rw_file_perms;
allow rilproxy eemcs_device:chr_file { rw_file_perms };

allow rilproxy Vcodec_device:chr_file { rw_file_perms };
allow rilproxy devmap_device:chr_file { r_file_perms };
allow rilproxy devpts:chr_file { rw_file_perms };
allow rilproxy ccci_device:chr_file { rw_file_perms };
allow rilproxy misc_device:chr_file { rw_file_perms };
allow rilproxy proc_lk_env:file rw_file_perms;
allow rilproxy sysfs_vcorefs_pwrctrl:file { w_file_perms };
allow rilproxy radio_tmpfs:file { w_file_perms };
allow rilproxy mmcblk0_block_device:blk_file { rw_file_perms };
allow rilproxy para_block_device:blk_file { rw_file_perms };

# Allow dir search, fd uses
allow rilproxy block_device:dir search;
#allow rilproxy platformblk_device:dir search;
allow rilproxy platform_app:fd use;
allow rilproxy radio:fd use;

# For emulator
allow rilproxy qemu_pipe_device:chr_file rw_file_perms;
allow rilproxy socket_device:sock_file { w_file_perms };

# For MAL MFI
allow rilproxy mal_mfi_socket:sock_file { w_file_perms };

# For ccci sysfs node
allow rilproxy sysfs_ccci:dir search;
allow rilproxy sysfs_ccci:file r_file_perms;

allow init socket_device:sock_file { create unlink setattr };

# new
allow rilproxy mtkrild:unix_stream_socket connectto;

